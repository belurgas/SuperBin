
name: "publish"

on:
  push:
    tags:
    - 'SuperBin-v*'

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code for current branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Install frontend dependencies
        run: yarn install

      - name: Build and publish Tauri app
        uses: tauri-apps/tauri-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: SuperBin-v__VERSION__
          releaseName: "SuperBin v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
      - name: Archive artifacts for upload
        run: |
          mkdir -p artifacts
          cp target/release/bundle/**/* artifacts/
          
  create-release:
    needs: publish-tauri
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Get version from build job
        id: get_info
        run: echo "version=${{ needs.build-tauri.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Create draft release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: SuperBin-v${{ steps.get_info.outputs.version }}
          release_name: SuperBin v${{ steps.get_info.outputs.version }}
          body: |
            ## What's new in this release

            - New features
            - Bug fixes
            - Performance improvements

            See the assets below to download and install.
          draft: true
          prerelease: false

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: ./releases

      - name: Upload macOS x86_64 binary
        if: exists('releases/artifacts/SuperBin-x86_64-apple-darwin.dmg')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./releases/artifacts/SuperBin-x86_64-apple-darwin.dmg
          asset_name: SuperBin-macOS-x86_64.dmg
          asset_content_type: application/octet-stream

      - name: Upload macOS aarch64 binary
        if: exists('releases/artifacts/SuperBin-aarch64-apple-darwin.dmg')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./releases/artifacts/SuperBin-aarch64-apple-darwin.dmg
          asset_name: SuperBin-macOS-arm64.dmg
          asset_content_type: application/octet-stream

      - name: Upload Windows binary
        if: exists('releases/artifacts/SuperBin-x86_64-pc-windows-msvc.exe')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./releases/artifacts/SuperBin-x86_64-pc-windows-msvc.exe
          asset_name: SuperBin-Windows-x64.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux binary
        if: exists('releases/artifacts/SuperBin-x86_64-unknown-linux-gnu.deb')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./releases/artifacts/SuperBin-x86_64-unknown-linux-gnu.deb
          asset_name: SuperBin-Linux-x64.deb
          asset_content_type: application/octet-stream
